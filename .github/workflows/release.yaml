# Release workflow - to be implemented
# Create pypi package on release
# What It Does
# - Triggers when you push a Git tag that starts with v and follows semantic versioning (e.g., v1.0.0).
# - Builds your Python project’s distribution (either with pyproject.toml + build or via setup.py).
# - Publishes it to PyPI using an API token stored in secrets.PYPI_API_TOKEN. (You’d add this secret in your repo’s Settings > Secrets and variables > Actions.)

# name: Release

# on:
# push:
#     tags:
#     - 'v*.*.*'  # triggers on tags like v1.0.0, v2.3.4, etc.

# jobs:
# build_and_release:
#     runs-on: ubuntu-latest
#     steps:
#     # 1. Check out the code
#     - uses: actions/checkout@v3

#     # 2. Set up Python
#     - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#         python-version: '3.x'

#     # 3. Install build tools
#     - name: Install build dependencies
#         run: |
#         python -m pip install --upgrade pip
#         # If you use pyproject.toml-based builds:
#         pip install build
#         # If you still use setup.py, install setuptools/wheel:
#         # pip install setuptools wheel

#     # 4. Build distribution
#     - name: Build distribution
#         run: |
#         # If you use pyproject.toml:
#         python -m build
#         # If you're using setup.py:
#         # python setup.py sdist bdist_wheel

#     # 5. Publish to PyPI (requires PYPI_API_TOKEN in your repo secrets)
#     - name: Publish to PyPI
#         if: github.event_name == 'push'
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#         password: ${{ secrets.PYPI_API_TOKEN }}